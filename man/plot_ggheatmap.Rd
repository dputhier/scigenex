% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{plot_ggheatmap}
\alias{plot_ggheatmap}
\title{Heatmap of data contained in a ClusterSet object.}
\usage{
plot_ggheatmap(
  object,
  to_log2 = FALSE,
  use_top_genes = TRUE,
  ident = NULL,
  panel_spacing = 0.05,
  colors = colors_for_gradient("Ju1"),
  standardizing = FALSE,
  color_ident = NULL,
  ceil = 1,
  floor = -1,
  centering = TRUE,
  xlab = "Genes",
  ylab = "Spots",
  hide_gene_name = TRUE,
  hide_col_name = TRUE,
  pseudocount = 0.1,
  coord_flip = FALSE
)
}
\arguments{
\item{object}{A ClusterSet object.}

\item{to_log2}{Whether data should be transform in logarithm base 2 (+ 0.1 as a pseudocount).}

\item{use_top_genes}{A logical to indicate whether to use highly similar genes in the slot top_genes of ClusterSet.}

\item{ident}{A named vector containing the cell type identities for each cell.
Typically the result from the Idents() function on a Seurat object (see Seurat library).}

\item{panel_spacing}{Spacing between facets/panels ("line" units).}

\item{colors}{A vector of colors for the gradient.}

\item{standardizing}{Whether rows should be divided by standard deviation.}

\item{color_ident}{A vector containing colors for the cell classes as.}

\item{ceil}{A value for ceiling (NULL for no ceiling). Ceiling is performed after log transformation, centering and standardization.}

\item{floor}{A value for flooring (NULL for no flooring). Flooring is performed after log transformation, centering and standardization.}

\item{centering}{Whether rows should be centered.}

\item{xlab}{A name for the x axis.}

\item{ylab}{A name for the y axis.}

\item{hide_gene_name}{Whether to hide gene names.}

\item{hide_col_name}{Whether to hide column names.}

\item{pseudocount}{A value for the pseudocount added before log transformation.}

\item{coord_flip}{Whether to flip the coordinates.}
}
\value{
A ggplot diagram.
}
\description{
Plot the results (heatmap) contained in a ClusterSet object.
}
\examples{
library(Seurat)
# Load datasets
load_example_dataset('7871581/files/pbmc3k_medium_clusters')
load_example_dataset('7871581/files/pbmc3k_medium')

# rename clusters
new_obj <- rename_clust(pbmc3k_medium_clusters, new_name=sprintf("M\%02d", as.integer(clust_names(pbmc3k_medium_clusters))))

# Use plot_ggheatmap
ident_pbmc3k <- sort(Seurat::Idents(pbmc3k_medium))
new_obj <- top_genes(new_obj)
plot_ggheatmap(new_obj[,names(ident_pbmc3k)], ident=ident_pbmc3k)
}
\keyword{internal}
